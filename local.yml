- hosts: localhost
  connection: local

  # TODO(patrik): Update the .zshenv with nvim path
  # TODO(patrik): Download node and nim
  # TODO(patrik): Install packer
  # TODO(patrik): Install ripgrep
  # TODO(patrik): Install fd-find
  # TODO(patrik): Install fzy

  pre_tasks:
    - name: Update system (apt)
      apt:
        update_cache: yes
        upgrade: yes
      become: yes
      when: ansible_distribution == "Ubuntu"

  tasks:
    - name: Install base packages (apt)
      loop:
        - build-essential
        - git
        - curl
        - unzip
        - tar
        - stow
        - ripgrep
        - fd-find
        - fzy
      apt:
        name: "{{ item }}"
        state: present
      become: yes
      when: ansible_distribution == "Ubuntu"

    - name: Create directories
      loop:
        - "{{ ansible_env.HOME }}/.config"
        - "{{ ansible_env.HOME }}/opt"
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory

    - name: Checkout Dotfiles repo
      ansible.builtin.git:
        repo: "https://www.github.com/nanoteck137/dotfiles.git"
        dest: "{{ ansible_env.HOME }}/dotfiles"

    - name: Stow Dotfiles
      loop:
        - nvim
        - i3
        - zsh
      shell: "stow {{ item }} -d {{ ansible_env.HOME }}/dotfiles --target {{ ansible_env.HOME }} --verbose=2"
      register: result
      changed_when: 'result.stderr is search("LINK: ")'

    - name: Install ZSH (apt)
      apt:
        name: zsh
        state: present
      become: yes
      register: zsh_install
      when: ansible_distribution == "Ubuntu"

    - name: Which ZSH
      command: which zsh
      register: which_zsh

    - name: Install "Oh my zsh"
      shell:
        cmd: 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended --keep-zshrc'
        chdir: "$HOME"
        creates: "$HOME/.oh-my-zsh"

    - name: Set login shell of user {{ ansible_env.USER }} to `/bin/zsh` with `usermod`
      command: usermod --shell {{ which_zsh.stdout }} {{ ansible_env.USER }}
      become: true
      changed_when: false

    - name: Download NVIM
      ansible.builtin.get_url:
        url: https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz
        dest: "{{ ansible_env.HOME }}/opt"
        checksum: sha256:https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz.sha256sum
      register: download_nvim

    - name: Unpack NVIM
      unarchive:
        src: "{{ download_nvim.dest }}"
        dest: "{{ ansible_env.HOME }}/opt"
      when: download_nvim.changed == true

    - name: Fetch Rust installer
      ansible.builtin.uri:
        url: https://sh.rustup.rs
        return_content: yes
      register: rust_installer

    - name: Run Rust installer
      ansible.builtin.shell:
        cmd: sh -s -- --default-toolchain nightly --no-modify-path -y
        stdin: "{{ rust_installer.content }}"
        creates: "{{ ansible_env.HOME }}/.cargo"

    # - name: Test
    #   blockinfile:
    #     path: "{{ ansible_env.HOME }}/test.txt"
    #     create: true
    #     state: present
    #     marker: "# {mark} Ansible Marker"
    #     content: ""

    - name: Add paths to .zshenv
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/test.txt"
        create: true
        state: present
        marker: "# {mark} Ansible Marker"
        block: |
          export PATH=$PATH:{{ item }}
          # {{ item.ip }} {{ item.name }}
      loop:
        - {{ ansible_env.HOME }}/.cargo/bin
        - {{ download_nvim.dest }}/bin
